// 할당연산자 (Assignment operators)

// 더하기 할당 (+=)
let a = 1;
a += 1; // 2
a = a + 1; // 3
console.log(a);

// 빼기 할당 (-=)
a -= 1; // 2
a = a - 1; // 1
console.log(a);

// 곱하기 할당 (*=)
a *= 2; // 2
a = a * 2; // 4
console.log(a);

// 나누기 할당 (/=)
a /= 2; // 2
a = a / 2; // 1
console.log(a);

// 나머지 할당 (%=)
a = 9;
a %= 2; // 1
a = a % 1; // 0
console.log(a);

// 거듭제곱 할당 (**=)
a = 2;
a **= 2; // 4
a = a ** 2; // 16
console.log(a);

// 왼쪽 시프트 할당 (<<=)
a = 5; // 00000000000000000000000000000101
a <<= 2; // 00000000000000000000000000010100
console.log(a); // 20

// 오른쪽 시프트 할당 (>>=)
a = 5; //  00000000000000000000000000000101
a >>= 2; //  00000000000000000000000000000001
console.log(a); // 1

a = -5; //  11111111111111111111111111111011
a >>= 2; //  11111111111111111111111111111110
console.log(a); // -1

// 부호 없는 오른쪽 시프트 할당 (>>>=)
a = 5; //  00000000000000000000000000000101
a >>>= 2; //  00000000000000000000000000000001
console.log(a); // 1

a = -5; // -00000000000000000000000000000101
a >>>= 2; //  00111111111111111111111111111110
console.log(a); // 1073741822

// 비트 AND 할당 (&=)
a = 5; // 00000000000000000000000000000101
a &= 3; // 00000000000000000000000000000011
console.log(a); // 1 // 00000000000000000000000000000001

// 비트 XOR 할당 (^=)
a = 5; // 00000000000000000000000000000101
a ^= 3; // 00000000000000000000000000000011
console.log(a); // 6 // 00000000000000000000000000000110

// 논리 OR 할당 (|=)
a = 5; // 00000000000000000000000000000101
a |= 3; // 00000000000000000000000000000011
console.log(a); // 7 // 00000000000000000000000000000111

// 논리 AND 할당 (&&=)
a = 1;
a &&= 2;
console.log(a); // 2

a = 0;
a &&= 2;
console.log(a); // 0

// 논리 OR 할당 (||=)
a = { duration: 0, title: '' };
a.duration ||= 10;
console.log(a.duration); // 10

a.title ||= 'title is empty.';
console.log(a.title); // "title is empty."

// 널 병합 할당 (??=)
a = { duration: 0 };
a.duration ??= 10;
console.log(a.duration); // 0

a.speed ??= 'title is empty.';
console.log(a.speed); // "title is empty."
